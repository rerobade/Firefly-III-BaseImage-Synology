# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- lolno

variables:
- name: buildPhpVersion
  value: 7.4 

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true

- script: |
    git config --global user.email "james@firefly-iii.org"
    git config --global user.name "James Cole"
  displayName: 'Do Git config'

- script: |
    cd BaseImage
    php build/generate-docker-files.php . ${{ variables.buildPhpVersion }}
  displayName: 'Run script to generate docker files.'

- script: |
    cd BaseImage
    git checkout main
    git status
    git add Dockerfile Dockerfile.original apache2-foreground docker-php-entrypoint docker-php-ext-configure docker-php-ext-enable docker-php-ext-install docker-php-source
    git commit -m "Auto-update build files."
    git push
  displayName: 'Commit changed to Git.'

- script: |
    set -euo pipefail
    sudo rm -rf /var/lib/apt/lists/*
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
    sudo apt-get update
    sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

    echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
    mkdir -p $HOME/.docker
    touch $HOME/.docker/config.json
    echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
    sudo service docker restart

    echo "Docker username = '$DOCKER_USERNAME'."

    docker version -f '{{.Server.Experimental}}'
    docker version
  displayName: 'Verify Docker installation.'
  env:
    DOCKER_USERNAME: $(dockerUsername)
    DOCKER_PASSWORD: $(dockerPassword)

- checkout: self
  clean: true